@page
@model SMARTLY.Pages.Product_MainClientModel
@{
	 if(Model.type==3)
    Layout = "/Pages/Shared/_LayoutClient.cshtml";
	else
	Layout = "/Pages/Shared/_Layout.cshtml";
}

<section id="hero2" class="d-flex align-items-center">
	<div class="container position-relative" data-aos="fade-up" data-aos-delay="500">
		<div class="header-search">
			<form method="post" id="SearchForm">
				<input class="input-select" asp-for="@Model.search" placeholder="Search for Products"></input>
				<button asp-page-handler="search" class="search-btn"><i class="fa fa-search"></i></button>
			</form>
		</div>
	</div>
</section>
<br />
<br />


<div class="product-section mt-150 mb-150">
	<div class="container" data-aos="fade-up">

		<div class="row">
			<div class="col-md-12">
				<div class="product-filters">
					<ul>
						<li data-filter=".*" class="active" onclick="filterProducts('*')">All</li>
						@for (int i = 0; i < Model.CategoriesTable.Rows.Count; i++)
						{
							<li data-filter=".@Model.CategoriesTable.Rows[i]["title"]" onclick="filterProducts('.@Model.CategoriesTable.Rows[i]["title"]')">@Model.CategoriesTable.Rows[i]["title"]</li>
						}
					</ul>
			
				</div>
			</div>
		</div>

		@if (Model.ThisState == 0)
		{
		<div class="section">
		
			<div class="container" data-aos="fade-up">
					
				<div class="row">
					@if(Model.ProductsTable.Rows.Count==0) 
						{
						<p>Nothing to show here</p>
						}
					<div class="product-cards-container">
					@for (int i = 0; i < Model.ProductsTable.Rows.Count; i++)
					{

							<div class="col-md-4 col-xs-6">
								<div class="product" style="width: 410px; height: 443px; object-fit: fill; border: 1px solid black ">
									
									@if (Model.returnCategory((int)Model.ProductsTable.Rows[i][6]) != ViewBag.Category)
									{


										<div class="product-img" style="width: 400px" >
											@{
												byte[] bytes = (byte[])Model.ProductsTable.Rows[i][8];
												var base64 = Convert.ToBase64String(bytes);
												var imgsrc = string.Format("data:image/gif;base64,{0}", base64);
											}
											<a asp-page="/Products_internalClient" asp-route-id="@Model.ProductsTable.Rows[i][0]">
												
												<img src="@imgsrc" style="width: 408px; height: 300px; object-fit: fill;" />
											</a>
											<div class="product-label">

												@if (Model.returnSale((double)Model.ProductsTable.Rows[i][5]) != 0)
												{
													<span class="sale">@Model.ProductsTable.Rows[i][5] %</span>
												}

											</div>
											
										</div>
										<div class="product-body" style="background: #333">
											<p class="product-category">@Model.returnCategory((int)Model.ProductsTable.Rows[i][6])</p>
											<h3 class="product-name"><a asp-page="/Products_internalClient" asp-route-id="@Model.ProductsTable.Rows[i][0]">@Model.ProductsTable.Rows[i][1]</a></h3>


											@if (Model.returnSale((double)Model.ProductsTable.Rows[i][5]) != 0)
											{
												<h4 class="product-price">
													EGP @Model.price_after_sale((double)Model.ProductsTable.Rows[i][2], (double)Model.ProductsTable.Rows[i][5])
													<del class="product-old-price"> EGP @Model.ProductsTable.Rows[i][2]  </del>
												</h4>
											}
											@if (Model.returnSale((double)Model.ProductsTable.Rows[i][5]) == 0)
											{
												<h4 class="product-price">
													EGP @Model.ProductsTable.Rows[i][2]
												</h4>
											}



											<div class="product-btns">

												
												<a asp-page="/Products_internalClient" asp-route-id="@Model.ProductsTable.Rows[i][0]"><i class="fa fa-view"></i><span class="tooltipp"></span></a>

											</div>


										</div>
									}
									@if (Convert.ToInt32(Model.ProductsTable.Rows[i][3]) != 0)
									{
										<div class="add-to-cart">
											@if (Model.type == 3)
											{
												<a asp-page="/CartClient" asp-page-handler="Add" class="add-to-cart-btn" asp-route-id="@Model.ProductsTable.Rows[i][0]" asp-route-type="1">Add to cart</a>
											}
											else
											{
												<a asp-page="/Cart" asp-page-handler="Add" class="add-to-cart-btn" asp-route-id="@Model.ProductsTable.Rows[i][0]" asp-route-type="1">Add to cart</a>
											}
										</div>
									}
									
									@if (Convert.ToInt32(Model.ProductsTable.Rows[i][3])==0)
									{
										<div class="sold-out-overlay">
											<span class="sold-out-text">Sold Out</span>
										</div>
										}
										</div>
										<br />
										<br />
										<br />
									
								</div>
					}
				</div>


					<br />
					<br />


				</div>
				

			</div>
		
		</div>
		}
		else
		{
		<div class="section">
			
			<div class="container" data-aos="fade-up">
				<div class="row">
						<div class="product-cards-container">
					@for (int i = 0; i < Model.ProductsTable.Rows.Count; i++)
					{
						<div class="col-md-4 col-xs-6">
								<div class="product" data-category="@Model.returnCategory((int)Model.ProductsTable.Rows[i][6])">
								<div class="product-img">
										@{
												byte[] bytes = (byte[])Model.ProductsTable.Rows[i][8];
												var base64 = Convert.ToBase64String(bytes);
												var imgsrc = string.Format("data:image/gif;base64,{0}", base64);
											}
											<img src="@imgsrc" style="width: 416px; height: 300px; object-fit: fill;" />

									<div class="product-label">
										@if (Model.returnSale((double)Model.ProductsTable.Rows[i][5]) != 0)
										{
											<span class="sale">@Model.ProductsTable.Rows[i][5] %</span>
										}
									</div>
								</div>
								<div class="product-body">
									<p class="product-category">@Model.returnCategory((int)Model.ProductsTable.Rows[i][6])</p>
									<h3 class="product-name">
											<a asp-page="/Products_internalClient" asp-route-id="@Model.ProductsTable.Rows[i][0]"><br>@Model.ProductsTable.Rows[i][1]</a>

									</h3>

									@if (Model.returnSale((double)Model.ProductsTable.Rows[i][5]) == 0)
									{
										<h4 class="product-price">
											EGP @Model.ProductsTable.Rows[i][2]
										</h4>
									}
									else
									{
										<h4 class="product-price">
											EGP @Model.ProductsTable.Rows[i][9]
										</h4>
									}

									<div class="product-rating">
										<i class="fa fa-star"></i>
										<i class="fa fa-star"></i>
										<i class="fa fa-star"></i>
										<i class="fa fa-star"></i>
										<i class="fa fa-star"></i>
									</div>

									<div class="product-btns">
											<a asp-page="/Products_internalClient" class="quick-view" asp-route-id="@Model.ProductsTable.Rows[i][0]">
											<i class="fa fa-eye"></i><span class="tooltipp"></span>
										</a>
									</div>

								</div>
								<div class="add-to-cart">
										<a asp-page="/Products_internalClient" asp-route-id="@Model.ProductsTable.Rows[i][0]">View</a><br>
								</div>

							</div>

						</div>


						
					}
					</div>

					<br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
				</div>
			</div>
		</div>

		}

	
	</div>

</div>

<br />
<br />
<br />
<br />
<script>
	function filterProducts(category) {
		
		category = category.replace(/^\./, '');

	
		$(".product-filters ul li").removeClass("active");
		$(`.product-filters ul li[data-filter='${category}']`).addClass("active");

		
		localStorage.setItem("selectedCategory", category);

		
		var urlParams = new URLSearchParams(window.location.search);
		urlParams.set("selectedCategory", category);
		var newUrl = window.location.pathname + "?" + urlParams.toString();

	
		window.location.href = newUrl;
	}
	$(document).ready(function () {
	
		var urlParams = new URLSearchParams(window.location.search);
		var selectedCategory = urlParams.get("selectedCategory");

		
		if (selectedCategory) {
			$(".product-filters ul li").removeClass("active");
			$(`.product-filters ul li[data-filter='.${selectedCategory}']`).addClass("active");
		} else {
			
			$(".product-filters ul li").removeClass("active");
			$(".product-filters ul li[data-filter='.*']").addClass("active");
		}
	});

</script>
